{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAUA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WAETH,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,YAEfA,MAjBMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAuBtB,SAAkBC,GAChBA,EAAEC,iBASF,IALA,IAA6DC,EAAfF,EAAEG,cAAxCC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAC7BC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,IACpC1B,EAAc0B,EAAGL,GACdM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBJ,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,UAE9D8B,OAAM,SAAAJ,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBJ,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,UAE1DmB,GAAcG,EAEdX,EAAEG,cAAckB,W","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n    \n  if (shouldResolve) {\n    resolve({position, delay})\n  } else {\n    reject({position, delay})\n  } \n    }, delay)\n    \n  })\n  \n}\n\n\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n\n  \n  const { elements: { delay, step, amount } } = e.currentTarget;\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i++) {\ncreatePromise(i, delayValue)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });    \n    delayValue += stepValue\n\n    e.currentTarget.reset();\n\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","stepValue","amountValue","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.ac01acff.js.map"}