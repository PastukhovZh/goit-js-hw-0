{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAUA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAETH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,MAEfA,MAjBMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAuBtB,SAAkBC,GAChBA,EAAEC,iBAIF,MAAQC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IAAaL,EAAEM,cAChD,IAAIC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAClC,IAAKF,GAAcG,GAAaC,IAAgB,EAG9C,OAFAX,EAAEM,cAAcM,QAET3B,EAAA4B,OAAOC,QAAQ,wCAEpB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAaI,IAGtC5B,EAAc4B,EAAGR,GACdS,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOI,QAAQ,uBAAqB7B,QAAiBC,UAEtD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOM,QAAQ,sBAAoB/B,QAAeC,UAElDkB,GAAcG,EAIdV,EAAEM,cAAcM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n    \n  if (shouldResolve) {\n    resolve({position, delay})\n  } else {\n    reject({position, delay})\n  } \n    }, delay)\n    \n  })\n  \n}\n\n\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n\n  \n  const { elements: { delay, step, amount } } = e.currentTarget;\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\nif ((delayValue || stepValue || amountValue) <= 0) {\n  e.currentTarget.reset();\n  \n  return Notify.warning('Не поймали на минусовых значениях :p')\n    }\n    for (let i = 1; i <= amountValue; i++) {\n\n    \ncreatePromise(i, delayValue)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });    \n    delayValue += stepValue\n\n    \n    }\n    e.currentTarget.reset();\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","delayValue","Number","value","stepValue","amountValue","reset","Notify","warning","i","then","success","catch","failure"],"version":3,"file":"03-promises.3d917297.js.map"}